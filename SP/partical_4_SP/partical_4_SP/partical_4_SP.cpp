// partical_4_SP.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#include <iostream>
#include <windows.h>
#include <iomanip>
#include <list>

int main() {
    setlocale(LC_ALL, "rus");
    
        HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
        SetConsoleTextAttribute(hConsole, (WORD)((15 << 4) | 0));
    
        std::cout << "+--------------------------------------------------------+" << std::endl;
        std::cout << "| Определение координат четвёртой вершины прямоугольника |" << std::endl;
        std::cout << "+--------------------------------------------------------+" << std::endl;

        SetConsoleTextAttribute(hConsole, (WORD)((0 << 4) | 15)); 

        int x1, y1, x2, y2, x3, y3;
        std::cout << "Введите координаты трех вершин прямоугольника:\n";
        std::cout << "Введите x1: ";
        while (!(std::cin >> x1)) {
            std::cout << "Ошибка! Введите корректное значение для x1: ";
            std::cin.clear();
            std::cin.ignore(256, '\n');
        }
        std::cout << "Введите y1: ";
        while (!(std::cin >> y1)) {
            std::cout << "Ошибка! Введите корректное значение для y1: ";
            std::cin.clear();
            std::cin.ignore(256, '\n');
        }
        std::cout << "Введите x2: ";
        while (!(std::cin >> x2)) {
            std::cout << "Ошибка! Введите корректное значение для x2: ";
            std::cin.clear();
            std::cin.ignore(256, '\n');
        }
        std::cout << "Введите y2: ";
        while (!(std::cin >> y2)) {
            std::cout << "Ошибка! Введите корректное значение для y2: ";
            std::cin.clear();
            std::cin.ignore(256, '\n');
        }
        std::cout << "Введите x3: ";
        while (!(std::cin >> x3)) {
            std::cout << "Ошибка! Введите корректное значение для x3: ";
            std::cin.clear();
            std::cin.ignore(256, '\n');
        }
        std::cout << "Введите y3: ";
        while (!(std::cin >> y3)) {
            std::cout << "Ошибка! Введите корректное значение для y3: ";
            std::cin.clear();
            std::cin.ignore(256, '\n');
        }
        // Проверяем, что стороны прямоугольника параллельны координатным осям 
        if ((x1 == x2 && y1 == y3) || (x1 == x3 && y1 == y2) || (x2 == x3 && y2 == y3)) {
            // Вычисляем координаты четвертой вершины 
            int x4, y4;
            if (x1 == x2) {
                x4 = x3;
                y4 = y2;
            }
            else if (x1 == x3) {
                x4 = x2;
                y4 = y3;
            }
            else {
                x4 = x1;
                y4 = y3;
            }
            std::cout << "Координаты четвертой вершины: (" << x4 << ", " << y4 << ")\n";
        }
        else {
            std::cout << "Невозможно получить прямоугольник со сторонами, параллельными координатным осям.\n";
        }
        return 0;
}

//int main() {
//    setlocale(LC_ALL, "rus");
//
//    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
//    SetConsoleTextAttribute(hConsole, (WORD)((15 << 4) | 0));
//
//    std::cout << "+--------------------------------------------------------+" << std::endl;
//    std::cout << "| Определение координат четвёртой вершины прямоугольника |" << std::endl;
//    std::cout << "+--------------------------------------------------------+" << std::endl;
//    std::cout << std::endl;
//
//    SetConsoleTextAttribute(hConsole, (WORD)((0 << 4) | 15));
//
//    int x1, y1, x2, y2, x3, y3;
//    try {
//        std::cout << "Введите координаты трех вершин прямоугольника:\n";
//        std::cout << "Введите x1: ";
//        std::cin >> x1;
//        std::cout << "Введите y1: ";
//        std::cin >> y1;
//        std::cout << "Введите x2: ";
//        std::cin >> x2;
//        std::cout << "Введите y2: ";
//        std::cin >> y2;
//        std::cout << "Введите x3: ";
//        std::cin >> x3;
//        std::cout << "Введите y3: ";
//        std::cin >> y3;
//    }
//    catch (const char* error_message) {
//        std::cerr << "у вас ошибочка: " << error_message;
//    }
//        // Проверяем, что стороны прямоугольника параллельны координатным осям
//    if ((x1 == x2 && y1 == y3) || (x1 == x3 && y1 == y2) || (x2 == x3 && y2 == y3)) {
//            // Вычисляем координаты четвертой вершины
//            int x4, y4;
//            if (x1 == x2) {
//                x4 = x3;
//                y4 = y2;
//            }
//            else if (x1 == x3) {
//                x4 = x2;
//                y4 = y3;
//            }
//            else {
//                x4 = x1;
//                y4 = y3;
//            }
//            std::cout << "Координаты четвертой вершины: (" << x4 << ", " << y4 << ")\n";
//        }
//        else {
//            std::cout << "Невозможно получить прямоугольник со сторонами, параллельными координатным осям.\n";
//        }
//        return 0;
//}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
